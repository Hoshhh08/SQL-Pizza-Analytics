-- PIZZA SALES PROJECT - INTERMEDIATE SQL QUERIES--

-- Q1) Join the necessary tables to find the total quantity of each pizza category ordered.
SELECT 
    PIZZA_TYPES.CATEGORY AS PIZZA_CATEGORY,
    SUM(ORDER_DETAILS.QUANTITY) AS QUANTITY
FROM
    PIZZA_TYPES
        JOIN
    PIZZAS ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
        JOIN
    ORDER_DETAILS ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
GROUP BY CATEGORY
ORDER BY QUANTITY DESC;

-- Q2) Determine the distribution of orders by hour of the day.
SELECT 
    HOUR(ORDER_TIME) AS ORDER_TIME,
    COUNT(ORDER_ID) AS NO_OF_ORDERS
FROM
    ORDERS
GROUP BY HOUR(ORDER_TIME);

-- Q3) 	Join relevant tables to find the category-wise distribution of pizzas.
SELECT 
    CATEGORY, COUNT(NAME) AS PIZZAS
FROM
    PIZZA_TYPES
GROUP BY CATEGORY
ORDER BY PIZZAS DESC;

-- Q4) Group the orders by date and calculate the average number of pizzas ordered per day.
SELECT 
    ROUND(AVG(QUANTITY), 0) AS AVG_PIZZA_ORDERED
FROM
    (SELECT 
        ORDERS.ORDER_DATE AS ORDERED_DATE,
            SUM(ORDER_DETAILS.QUANTITY) AS QUANTITY
    FROM
        ORDERS
    JOIN ORDER_DETAILS ON ORDERS.ORDER_ID = ORDER_DETAILS.ORDER_ID
    GROUP BY ORDERED_DATE) AS QUANTITY_ORDERED;
    
    -- Q5) Determine the top 3 most ordered pizza types based on revenue.
   SELECT 
    PIZZA_TYPES.NAME AS MOST_ORDERED_PIZZAS,
    SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE) AS REVENUE
FROM
    PIZZA_TYPES
        JOIN
    PIZZAS ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
        JOIN
    ORDER_DETAILS ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID
GROUP BY MOST_ORDERED_PIZZAS
ORDER BY REVENUE DESC
LIMIT 3;